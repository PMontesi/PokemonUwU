SELECT * FROM POKEMON_EQUIPO WHERE ID_ENTRENADOR = ?;

INSERT INTO ENTRENADOR (NOM_ENTRENADOR, PASS, POKEDOLLARS) VALUES (?, ?, ?);

SELECT * FROM ENTRENADOR WHERE NOM_ENTRENADOR = ? AND PASS = ?;

INSERT INTO POKEMON
(NUM_POKEDEX, ID_ENTRENADOR, MOTE, CAJA, ATAQUE, AT_ESPECIAL, DEFENSA, DEF_ESPECIAL, VELOCIDAD, NIVEL,
FERTILIDAD, SEXO, ESTADO, EXPERIENCIA, VITALIDAD, VIT_MAX)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

SELECT * FROM POKEDEX ORDER BY RAND() LIMIT 1;

SELECT * FROM POKEMON_CAJA WHERE ID_ENTRENADOR = ?;

UPDATE POKEMON SET CAJA = 0 WHERE ID_POKEMON = ?
UPDATE POKEMON SET CAJA = 1 WHERE ID_POKEMON = ?

SELECT * FROM POKEDEX ORDER BY RAND() LIMIT 1;

UPDATE MOVIMIENTOS_POKEMON SET ACTIVO = 0 WHERE ID_POKEMON = ? AND ID_MOVIMIENTO = ?;

INSERT INTO MOVIMIENTOS_POKEMON (ID_MOVIMIENTO, ID_POKEMON, ACTIVO) VALUES (?, ?, ?)

SELECT * FROM MOVIMIENTOS M
WHERE NIVEL_APRENDIZAJE <= ?
AND TIPO = 'NORMAL'
OR TIPO = ?
OR TIPO = ?
AND NOT EXISTS (
    SELECT *
    FROM MOVIMIENTOS_POKEMON MP
    WHERE MP.ID_MOVIMIENTO = M.ID_MOVIMIENTO AND
    MP.ID_POKEMON = ?
)
ORDER BY RAND() LIMIT 1;


UPDATE POKEMON\n
SET
    ATAQUE = ATAQUE + ?,
    AT_ESPECIAL = AT_ESPECIAL + ?,
    DEFENSA = DEFENSA + ?,
    DEF_ESPECIAL = DEF_ESPECIAL + ?,
    VELOCIDAD = VELOCIDAD + ?,
    VIT_MAX = VIT_MAX + ?,
    EXPERIENCIA = ?,
    NIVEL = NIVEL + 1
WHERE ID_POKEMON = ?;


SELECT M.*, MD.PP_REST
FROM MOVIMIENTOS M
INNER JOIN MOVIMIENTOS_POKEMON MD ON MD.ID_MOVIMIENTO = M.ID_MOVIMIENTO
INNER JOIN POKEMON P ON P.ID_POKEMON = MD.ID_POKEMON
WHERE P.ID_POKEMON = ?
AND MD.ACTIVO = 1;

SELECT MAX(P.ID_POKEMON), PK.TIPO1, PK.TIPO2
FROM POKEMON P
JOIN POKEDEX PK ON P.NUM_POKEDEX = PK.NUM_POKEDEX
WHERE P.ID_POKEMON = (SELECT MAX(ID_POKEMON) FROM POKEMON);



---EL SIGUIENTE INSERT SOLO SIRVE PARA DARLE MOVIMIENTOS A LOS POKEMONS DESDE LA BBDD
---SUSTITUIR LAS ? POR LA ID DEL POKEMON EN CUESTIÃ“N.
---SI EL POKEMON TIENE UA CUATRO MOVIMIENTOS EN 1, CAMBIAR POR 0 EN EL INSERT.
INSERT INTO MOVIMIENTOS POKEMON (ID_MOVIMIENTO, ID_POKEMON, ACTIVO, PP_REST)
SELECT M.ID_MOVIMIENTO, P.ID_POKEMON, 1, M.PP_MAX
FROM MOVIMIENTOS M, POKEMON P, POKEDEX PX
WHERE M.NIVEL_APRENDIZAJE <= 1
AND P.ID_POKEMON = ?
AND P.NUM_POKEDEX = PX.NUM_POKEDEX
AND (M.TIPO = 'NORMAL' OR M.TIPO = PX.TIPO1 OR M.TIPO = PX.TIPO2)
AND NOT EXISTS (
    SELECT *
    FROM MOVIMIENTOS_POKEMON MP
    WHERE MP.ID_MOVIMIENTO = M.ID_MOVIMIENTO AND
    MP.ID_POKEMON = ?
)
ORDER BY RAND() LIMIT 1;

